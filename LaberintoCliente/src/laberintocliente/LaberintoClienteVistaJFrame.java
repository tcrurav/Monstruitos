/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laberintocliente;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JSlider;
import pojos.Operacion;

/**
 *
 * @author Tiburcio
 */
public class LaberintoClienteVistaJFrame extends javax.swing.JFrame implements LaberintoClienteVista {
    private int ancho;
    private int alto;
    private int margen;
    private LaberintoClientePresentador presentador;
    private final LaberintoClienteVistaCanvas laberintoCanvas;
    /**
     * Creates new form LaberintoVistaJFrame
     */
    
    public LaberintoClienteVistaJFrame() {
        initComponents();
       
        laberintoCanvas = new LaberintoClienteVistaCanvas();
        laberintoCanvas.setListener(this);
    }
    
    @Override
    public void setDimensiones(int alto, int ancho, int margen){
        this.ancho = ancho;
        this.alto = alto;
        this.margen = margen;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonIzquierda = new javax.swing.JButton();
        jButtonArriba = new javax.swing.JButton();
        jButtonAbajo = new javax.swing.JButton();
        jButtonDerecha = new javax.swing.JButton();
        jSliderVelocidad = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonIzquierda.setText("Izquierda");
        jButtonIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzquierdaActionPerformed(evt);
            }
        });

        jButtonArriba.setText("Arriba");
        jButtonArriba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonArribaActionPerformed(evt);
            }
        });

        jButtonAbajo.setText("Abajo");
        jButtonAbajo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAbajoActionPerformed(evt);
            }
        });

        jButtonDerecha.setText("Derecha");
        jButtonDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDerechaActionPerformed(evt);
            }
        });

        jSliderVelocidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderVelocidadStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSliderVelocidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonIzquierda)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonArriba)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAbajo)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDerecha)))
                .addContainerGap(284, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(564, Short.MAX_VALUE)
                .addComponent(jSliderVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIzquierda)
                    .addComponent(jButtonArriba)
                    .addComponent(jButtonAbajo)
                    .addComponent(jButtonDerecha))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDerechaActionPerformed
        presentador.realizarMovimientoJugador(Operacion.DERECHA);
    }//GEN-LAST:event_jButtonDerechaActionPerformed

    private void jButtonIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzquierdaActionPerformed
        presentador.realizarMovimientoJugador(Operacion.IZQUIERDA);
    }//GEN-LAST:event_jButtonIzquierdaActionPerformed

    private void jButtonArribaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonArribaActionPerformed
        presentador.realizarMovimientoJugador(Operacion.ARRIBA);
    }//GEN-LAST:event_jButtonArribaActionPerformed

    private void jButtonAbajoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAbajoActionPerformed
        presentador.realizarMovimientoJugador(Operacion.ABAJO);
    }//GEN-LAST:event_jButtonAbajoActionPerformed

    private void jSliderVelocidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderVelocidadStateChanged
        presentador.cambiarVelocidad(((JSlider) evt.getSource()).getValue());
    }//GEN-LAST:event_jSliderVelocidadStateChanged

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(LaberintoVistaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(LaberintoVistaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(LaberintoVistaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(LaberintoVistaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new LaberintoVistaJFrame().setVisible(true);
//            }
//        });
//    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAbajo;
    private javax.swing.JButton jButtonArriba;
    private javax.swing.JButton jButtonDerecha;
    private javax.swing.JButton jButtonIzquierda;
    private javax.swing.JSlider jSliderVelocidad;
    // End of variables declaration//GEN-END:variables

    @Override
    public void activarBotones() {
        jButtonAbajo.setEnabled(true);
        jButtonArriba.setEnabled(true);
        jButtonIzquierda.setEnabled(true);
        jButtonDerecha.setEnabled(true);
        jSliderVelocidad.setEnabled(true);
    }

    @Override
    public void desactivarBotones() {
        jButtonAbajo.setEnabled(false);
        jButtonArriba.setEnabled(false);
        jButtonIzquierda.setEnabled(false);
        jButtonDerecha.setEnabled(false);
        jSliderVelocidad.setEnabled(false);
    }
    
    @Override
    public void open() {
        mostrarLaberintoVacio();
        setVisible(true);
    }

    @Override
    public void limpiarCanvas(){
        Graphics g = laberintoCanvas.getGraphics();
        g.clearRect(0, 0, laberintoCanvas.getWidth(), laberintoCanvas.getHeight());
    }
    
    @Override
    public void mostrarJugador(int x, int y, String ficheroImagen) {
        Graphics g = laberintoCanvas.getGraphics();
        Image imagen = new ImageIcon("images/" + ficheroImagen).getImage();
        g.drawImage(imagen, x, y, 50, 50, this);
    }

    public void mostrarLaberintoVacio() {
        Dimension dimension = new Dimension(ancho + 2 * margen, alto + 2 * margen);
        getContentPane().setPreferredSize(dimension);
        pack();
        
        setLocationRelativeTo(null);
        
        laberintoCanvas.setSize(ancho, alto);
        laberintoCanvas.setBackground(Color.yellow);
        
        add(laberintoCanvas);
        
        laberintoCanvas.setLocation(margen, margen);
        
        this.setResizable(false);
    }
    
    @Override
    public void calibrarVelocidad(int velocidad){
        jSliderVelocidad.setMaximum(100);
        jSliderVelocidad.setMinimum(0);
        jSliderVelocidad.setValue(velocidad);
    }

    @Override
    public void setPresentador(LaberintoClientePresentador presentador) {
        this.presentador = presentador;
    }
    
    @Override
    public void onRepaint() { // Me lo inventé yo para hacerlo más ordenador (aunque más complejo)
        if(presentador != null){
            presentador.mostrarJugadores();
        }
    }
}
